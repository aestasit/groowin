
plugins {

  id 'groovy'
  id 'maven'
  id 'eclipse'
  id 'idea'
  id 'project-report'

  id "net.saliman.cobertura" version "2.2.5"
  id "com.github.hierynomus.license" version "0.11.0"
  id "org.ajoberstar.github-pages" version "0.10.0"
  id "org.asciidoctor.gradle.asciidoctor" version "1.5.0"

}

group = 'com.aestasit.infrastructure.groowin'
version = '0.1.8-SNAPSHOT'

apply from: 'repos.gradle'
apply from: 'sonar.gradle'
apply from: 'docs.gradle'

dependencies {

  compile "org.codehaus.groovy:groovy-all:${groovyVersion}"
  compile "org.slf4j:slf4j-api:${slf4jVersion}"
  compile "org.slf4j:jcl-over-slf4j:${slf4jVersion}"
  compile "ch.qos.logback:logback-classic:${logbackVersion}"

  compile 'commons-io:commons-io:1.4'
  compile 'commons-codec:commons-codec:1.9'

  compile "org.codehaus.groovy.modules.http-builder:http-builder:0.7.1"

  compile "jcifs:jcifs:1.3.17"
  compile 'com.google.guava:guava:16.0.1'
  compile 'nl.javadude.scannit:scannit:1.2.1'
  compile 'dom4j:dom4j:1.6.1'
  compile 'jaxen:jaxen:1.1.6'
  compile 'org.apache.httpcomponents:httpclient:4.2.1'
  compile 'org.apache.httpcomponents:httpcore:4.2.1'
  compile 'commons-codec:commons-codec:1.6'
  compile 'com.aestasit.infrastructure.winrm:groovy-winrm-client:0.1'

  testCompile "junit:junit:${junitVersion}"
}

sourceSets {
  integrationTest {
    compileClasspath += main.output + test.output
    runtimeClasspath += main.output + test.output
  }
}

configurations {
  all*.exclude group: 'commons-logging'
  all*.exclude group: 'log4j'
  all*.exclude module: 'slf4j-simple'
  all*.exclude module: 'xml-apis'
  all*.exclude module: 'xmlParserApis'
  all*.exclude module: 'xercesImpl'
  integrationTestCompile.extendsFrom testCompile
  integrationTestRuntime.extendsFrom testRuntime
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.1'
}

task integration(type: Test) {
  description = "Run integration tests (located in src/integrationTest/groovy)."
  testClassesDir = project.sourceSets.integrationTest.output.classesDir
  classpath = project.sourceSets.integrationTest.runtimeClasspath
}

idea {
  module {
    testSourceDirs += file('src/integrationTest/groovy')
  }
}

license {
  header rootProject.file('HEADER')
}

